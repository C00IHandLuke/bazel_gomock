load("//:gomock.bzl", "gomock")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")

# keep
gomock(
    name = "helloer_reflect_mock",
    out = "hello_mock.go",
    interfaces = ["Helloer"],
    library = "//tests/hello",
    package = "main",
)

# keep
gomock(
    name = "helloer_mock_with_copyright",
    out = "helloer_copyright.go",
    copyright_file = "fake_copyright.txt",
    interfaces = ["Helloer"],
    library = "//tests/hello",
    package = "main",
)

# keep
gomock(
    name = "helloer_source_mock",
    out = "helloer_source_mock.go",
    interfaces = ["Helloer"],
    library = "//tests/hello",
    mock_names = {"Helloer": "MockSourceHelloer"},
    package = "main",
)

# keep
gomock(
    name = "helloer_reflect_mock_with_mock_names",
    out = "hello_mock_renamed.go",
    interfaces = ["Helloer"],
    library = "//tests/hello",
    mock_names = {"Helloer": "MockRenamedReflectHelloer"},
    package = "main",
)

# keep
go_test(
    name = "go_default_test",
    srcs = [
        "gomock_test.go",
        ":helloer_reflect_mock",
        ":helloer_reflect_mock_with_mock_names",
        ":helloer_source_mock",
    ],
    args = [
        "-srcWithCopyright=$(location :helloer_mock_with_copyright)",
        "-copyright=$(location fake_copyright.txt)",
    ],
    data = [
        "fake_copyright.txt",
        ":helloer_mock_with_copyright",
    ],
    deps = [
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_google_go_cmp//cmp:go_default_library",
        "@io_bazel_rules_go//go/tools/bazel:go_default_library",
    ],
)